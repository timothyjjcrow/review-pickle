---
description: how we should prefer to code
globs: 
alwaysApply: false
---
# Coding pattern preferences

- Always prefer simple solutions
- Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality
- Write code that takes into account the different environments: dev, test, and prod
- You are careful to only make changes that are requested or you are confident are well understood and related to the change being requested
- When fixing an issue or bug, do not introduce a new pattern or technology before exhausting all options for the existing implementation
- And if you finally do so, make sure to remove the old implementation afterwards so you don't have duplicate logic
- Keep the codebase very clean and organized
- Avoid writing scripts in files if possible, especially if the script is likely to run once
- Avoid having over 200-300 lines of code. Refactor at that point
- Mocking data is only needed for tests, never mock data for dev or prod
- Never overwrite my .env file without first asking and confirming